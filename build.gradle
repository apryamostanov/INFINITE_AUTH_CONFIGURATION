
buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'maven'

jar {
    baseName = 'gs-accessing-data-rest'
    version = '0.1.0'
}


configurations {
    deployerJars
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile 'a9ae0b01f0ffc:INFINITE_TOOLS:1.0.0.BETA.009'
    compile 'a9ae0b01f0ffc:INFINITE_LOGGING:1.0.0.BETA.002'
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    //compile('io.springfox:springfox-swagger2:2.7.0')
    //compile('io.springfox:springfox-data-rest:2.7.0')
    //compile('io.springfox:springfox-swagger-ui:2.7.0')
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy']
        }
    }
}

bootRun {
    addResources = true
}

uploadArchives {
    repositories {
        mavenLocal()
        mavenDeployer {
            repository(url: mavenLocal().url)
            pom.version = '1.0.0'
            pom.groupId = 'a9ae0b01f0ffc'
            pom.artifactId = 'INFINITE_AUTH_CONFIGURATION'
        }
    }
}

mainClassName = 'base.T_spring_boot_application'

